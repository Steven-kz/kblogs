import{_ as n,o as s,c as a,f as t}from"./app-8ab1e15b.js";const e={},p=t(`<div class="hint-container tip"><p class="hint-container-title">说明</p><p>奇奇怪怪的问题</p></div><p>浅浅的说一个吧<br> 需求：是一个导入解析数据并返回（使用的是EasyExcel解析）。因为我使用的框架非springboot，而是JPlugin框架进行开发，没有MultipartFile类进行接受文件，当我用post自测的时候，使用binary方式请求是可以解析，但是使用form-data方式请求，easyexcle无法解析非文件流，就会抛异常，总之，一系列错误之后，就是因为这个原因，解决方案如下.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>            <span class="token comment">// Create a factory for disk-based file items</span>
            <span class="token class-name">DiskFileItemFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DiskFileItemFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Configure a repository (to ensure a secure temp location is used)</span>
            <span class="token class-name">ServletContext</span> servletContext <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">File</span> repository <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">File</span><span class="token punctuation">)</span> servletContext<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;javax.servlet.context.tempdir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            factory<span class="token punctuation">.</span><span class="token function">setRepository</span><span class="token punctuation">(</span>repository<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Create a new file upload handler</span>
            <span class="token class-name">ServletFileUpload</span> upload <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletFileUpload</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>
            upload<span class="token punctuation">.</span><span class="token function">setSizeMax</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置最大文件尺寸，这里是20MB</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileItem</span><span class="token punctuation">&gt;</span></span> items <span class="token operator">=</span> upload<span class="token punctuation">.</span><span class="token function">parseRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","index.html.vue"]]);export{r as default};
