const e=JSON.parse('{"key":"v-0fb3e4f0","path":"/java/DesignPattern/zr.html","title":"责任链模式","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2022-01-04T00:00:00.000Z","lastUpdated":true,"contributors":true,"description":"责任链模式 什么是责任链模式？ 责任链模式是将链中的每一个节点看作是一个对象，每个节点处理的请求不同，且内部自动维护一个下一节点对象。当一个请求从链式的首段发出时，会沿着链的路径依此传递给每一个节点对象，直至有对象处理这个请求为止。属于行为型模式 应用场景 在日常生活中责任链模式还是很常见的。我们平时处理一些事务，往往是各部门协同合作完成某些任务。而每个部门都有各自的职责，因此很多时候事情完成一半便会转交给下一个部门，直至所有部门都通过一遍后事情才能完成。 **责任链模式主要是解耦了请求与处理，客户只需要将请求发送到链上即可，无序关心请求的是具体内容和处理细节，请求会自动进行传递直至有节点对象进行处理。**适用与以下场景：","head":[["meta",{"property":"og:url","content":"https://k-flower.gitee.io/kblogs/java/DesignPattern/zr.html"}],["meta",{"property":"og:site_name","content":"Flowers"}],["meta",{"property":"og:title","content":"责任链模式"}],["meta",{"property":"og:description","content":"责任链模式 什么是责任链模式？ 责任链模式是将链中的每一个节点看作是一个对象，每个节点处理的请求不同，且内部自动维护一个下一节点对象。当一个请求从链式的首段发出时，会沿着链的路径依此传递给每一个节点对象，直至有对象处理这个请求为止。属于行为型模式 应用场景 在日常生活中责任链模式还是很常见的。我们平时处理一些事务，往往是各部门协同合作完成某些任务。而每个部门都有各自的职责，因此很多时候事情完成一半便会转交给下一个部门，直至所有部门都通过一遍后事情才能完成。 **责任链模式主要是解耦了请求与处理，客户只需要将请求发送到链上即可，无序关心请求的是具体内容和处理细节，请求会自动进行传递直至有节点对象进行处理。**适用与以下场景："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-07T07:15:40.000Z"}],["meta",{"property":"article:author","content":"Kou"}],["meta",{"property":"article:published_time","content":"2022-01-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-07T07:15:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"责任链模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-07T07:15:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kou\\"}]}"]]},"headers":[{"level":2,"title":"什么是责任链模式？","slug":"什么是责任链模式","link":"#什么是责任链模式","children":[]},{"level":2,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[]}],"git":{"createdTime":1696958030000,"updatedTime":1715066140000,"contributors":[{"name":"kou","email":"knightbreeze@163.com","commits":3},{"name":"kz","email":"1069624300@QQ.COM","commits":1}]},"readingTime":{"minutes":2.71,"words":813},"filePathRelative":"java/DesignPattern/zr.md","localizedDate":"2022年1月4日","excerpt":"<h1> 责任链模式</h1>\\n<h2> 什么是责任链模式？</h2>\\n<p><strong>责任链模式是将链中的每一个节点看作是一个对象，每个节点处理的请求不同，且内部自动维护一个下一节点对象。当一个请求从链式的首段发出时，会沿着链的路径依此传递给每一个节点对象，直至有对象处理这个请求为止。属于行为型模式</strong></p>\\n<h2> 应用场景</h2>\\n<p>在日常生活中责任链模式还是很常见的。我们平时处理一些事务，往往是各部门协同合作完成某些任务。而每个部门都有各自的职责，因此很多时候事情完成一半便会转交给下一个部门，直至所有部门都通过一遍后事情才能完成。<br>\\n**责任链模式主要是解耦了请求与处理，客户只需要将请求发送到链上即可，无序关心请求的是具体内容和处理细节，请求会自动进行传递直至有节点对象进行处理。**适用与以下场景：</p>","autoDesc":true}');export{e as data};
