import{_ as e,r as l,o as s,c as i,a,d as n,f as r}from"./app-8ab1e15b.js";const o={},c=r('<h1 id="类加载过程" tabindex="-1"><a class="header-anchor" href="#类加载过程" aria-hidden="true">#</a> 类加载过程</h1><p><strong>加载 &gt;&gt; 验证 &gt;&gt; 准备 &gt;&gt; 解析 &gt;&gt; 初始化</strong> &gt;&gt; 使用 &gt;&gt; 卸载</p><figure><img src="https://steven-kz.github.io/BlogImgs/imgaes/20231017144459.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="一、加载" tabindex="-1"><a class="header-anchor" href="#一、加载" aria-hidden="true">#</a> 一、加载</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>简单来说:加载指的是把class字节码文件通过类加载器装载入内存中。</p><p><strong>一个Java文件从编码完成到最终执行，一般主要包括两个过程：编译和运行，其中编译就是把我们写好的java文件，通过javac命令编译成字节码，也就是我们常说的.class文件，然后运行则是把编译声称的.class文件交给Java虚拟机(JVM)执行。而我们所说的类加载过程即是指JVM虚拟机把.class文件中类信息加载进内存，并进行解析生成对应的class对象的过程。</strong></p><p>反射的机制即基于这一基础。如果 JVM 没有将 Java 类的声明信息存储起来，则 JVM 在运行期也无法反射</p></div><h2 id="二、验证" tabindex="-1"><a class="header-anchor" href="#二、验证" aria-hidden="true">#</a> 二、验证</h2><blockquote><p>文件格式验证</p><p>元数据验证</p><p>字节码验证</p><p>符号引用验证</p></blockquote><h2 id="三、准备" tabindex="-1"><a class="header-anchor" href="#三、准备" aria-hidden="true">#</a> 三、准备</h2><ul><li>如果 static 变量是 final 的基本类型，以及字符串常量，那么编译阶段值就确定了，赋值在准备阶段完成</li><li>如果 static 变量是 final 的，但属于引用类型，即 new 对象，那么赋值会在初始化阶段完成</li></ul><h2 id="四、解析" tabindex="-1"><a class="header-anchor" href="#四、解析" aria-hidden="true">#</a> 四、解析</h2><p>解析阶段是将<strong>符号引用替换为直接引用</strong>，该阶段会把一些静态方法替换为<strong>指向数据内存的指针或句柄等</strong>（直接引用），这是所谓的<strong>静态链接</strong>过程</p><h2 id="五、初始化" tabindex="-1"><a class="header-anchor" href="#五、初始化" aria-hidden="true">#</a> 五、初始化</h2><p><strong>会导致 类初始化 的情况</strong></p><ul><li>main 方法所在的类，总会被首先初始化</li><li>首次访问这个类的 静态变量 或 静态方法 时</li><li>子类初始化，如果父类还未初始化，会引发</li><li>子类访问父类的静态变量，只会触发父类的初始化</li><li>Class.forName</li><li>new 会导致初始化</li></ul><p><strong>不会导致 类初始化 的情况</strong></p>',15),d=a("li",null,[a("p",null,"访问 类的 static final 静态变量（基本类型和字符型）不会触发初始化")],-1),h=a("li",null,[a("p",null,"类对象.class 不会触发初始化")],-1),p=a("li",null,[a("p",null,"创建该类的数组不会触发初始化")],-1),g=a("li",null,[a("p",null,"类加载的 loadClass 方法")],-1),u=a("p",null,"Class.forName 的参数2 为 false 时",-1);function _(f,m){const t=l("Meting");return s(),i("div",null,[c,a("ul",null,[d,h,p,g,a("li",null,[u,n(t,{server:"netease",type:"playlist",mid:"411997722","lrc-type":3})])])])}const b=e(o,[["render",_],["__file","class.html.vue"]]);export{b as default};
