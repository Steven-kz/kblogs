import{_ as t,r as i,o as p,c as r,a as n,b as s,d as e,f as o}from"./app-8ab1e15b.js";const l="/kblogs/images/MinIo/1.png",c="/kblogs/images/MinIo/2.png",d="/kblogs/images/MinIo/3.png",u="/kblogs/images/MinIo/4.png",k="/kblogs/images/MinIo/5.png",m="/kblogs/images/MinIo/6.png",v="/kblogs/images/MinIo/7.png",g="/kblogs/images/MinIo/8.png",b="/kblogs/images/MinIo/9.png",h="/kblogs/images/MinIo/10.png",_="/kblogs/images/MinIo/11.png",f={},I=o('<h1 id="minio" tabindex="-1"><a class="header-anchor" href="#minio" aria-hidden="true">#</a> Minio</h1><p>Minio 是个基于 Golang 编写的开源对象存储套件，基于Apache License v2.0开源协议，虽然轻量，却拥有着不错的性能。它兼容亚马逊S3云存储服务接口。可以很简单的和其他应用结合使用，例如 NodeJS、Redis、MySQL等。</p><h2 id="一、-应用场景" tabindex="-1"><a class="header-anchor" href="#一、-应用场景" aria-hidden="true">#</a> 一、 应用场景</h2><p>MinIO 的应用场景除了可以作为私有云的对象存储服务来使用，也可以作为云对象存储的网关层，无缝对接 Amazon S3 或者 MicroSoft Azure 。<br><img src="'+l+'"></p><h2 id="二、-特点" tabindex="-1"><a class="header-anchor" href="#二、-特点" aria-hidden="true">#</a> 二、 特点</h2>',5),M=n("li",null,[n("strong",null,"高性能"),s("：作为一款高性能存储，在标准硬件条件下，其读写速率分别可以达到 55Gb/s 和 35Gb/s。并且MinIO 支持一个对象文件可以是任意大小，从几kb到最大5T不等。")],-1),y=n("li",null,[n("strong",null,"可扩展"),s("：不同MinIO集群可以组成联邦，并形成一个全局的命名空间，并且支持跨越多个数据中心。")],-1),S=n("li",null,[n("strong",null,"云原生"),s("：容器化、基于K8S的编排、多租户支持。")],-1),x=n("li",null,[n("strong",null,"Amazon S3兼容"),s("：使用 Amazon S3 v2 / v4 API。可以使用Minio SDK，Minio Client，AWS SDK 和 AWS CLI 访问Minio服务器。")],-1),K=n("strong",null,"SDK支持",-1),C={href:"https://github.com/minio/minio-go",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/minio/minio-java",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/minio/minio-py",target:"_blank",rel:"noopener noreferrer"},w=n("li",null,[n("strong",null,"图形化界面"),s("：有操作页面")],-1),O=n("li",null,[n("strong",null,"支持纠删码"),s("：MinIO使用纠删码、Checksum来防止硬件错误和静默数据污染。在最高冗余度配置下，即使丢失1/2的磁盘也能恢复数据。")],-1),A=o(`<p>功能很强大，本文只是抛砖引玉，有兴趣的朋友自己去探索吧~</p><h2 id="三、安装minio" tabindex="-1"><a class="header-anchor" href="#三、安装minio" aria-hidden="true">#</a> 三、安装MinIO</h2><h3 id="_3-1-获取镜像" tabindex="-1"><a class="header-anchor" href="#_3-1-获取镜像" aria-hidden="true">#</a> 3.1 获取镜像</h3><p>执行命令如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>docker pull minio<span class="token operator">/</span>minio
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-2-启动镜像" tabindex="-1"><a class="header-anchor" href="#_3-2-启动镜像" aria-hidden="true">#</a> 3.2 启动镜像</h3><p>执行命令如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> docker run <span class="token operator">-</span>p <span class="token number">9000</span><span class="token operator">:</span><span class="token number">9000</span> <span class="token operator">-</span>p <span class="token number">9001</span><span class="token operator">:</span><span class="token number">9001</span> <span class="token operator">--</span>name minio <span class="token operator">-</span>d <span class="token operator">--</span>restart<span class="token operator">=</span>always <span class="token operator">-</span>e <span class="token string">&quot;MINIO_ACCESS_KEY=admin&quot;</span> <span class="token operator">-</span>e <span class="token string">&quot;MINIO_SECRET_KEY=admin123&quot;</span> <span class="token operator">-</span>v <span class="token operator">/</span>home<span class="token operator">/</span>data<span class="token operator">:</span><span class="token operator">/</span>data <span class="token operator">-</span>v <span class="token operator">/</span>home<span class="token operator">/</span>config<span class="token operator">:</span><span class="token operator">/</span>root<span class="token operator">/</span><span class="token punctuation">.</span>minio minio<span class="token operator">/</span>minio server <span class="token operator">--</span>console<span class="token operator">-</span>address <span class="token string">&quot;:9000&quot;</span> <span class="token operator">--</span>address <span class="token string">&quot;:9001&quot;</span> <span class="token operator">/</span>data 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令解释如下：</p><ul><li><strong>-p</strong>：<strong>9000</strong>是图形界面的端口，<strong>9001</strong>是API的端口，在使用SDK连接需要用到</li><li><strong>MINIO_ACCESS_KEY</strong>：指定图形界面的用户名</li><li><strong>MINIO_SECRET_KEY</strong>：指定图形界面的密码</li></ul><p>按照上述两个步骤启动成功即可。<br> 注意：ACCESS_KEY 长度最少3个字符，SECRET_KEY 长度最少8个字符</p><h3 id="_3-3-图形界面操作" tabindex="-1"><a class="header-anchor" href="#_3-3-图形界面操作" aria-hidden="true">#</a> 3.3 图形界面操作</h3><p>安装成功后直接访问地址：<strong>http:/ip:9000/login</strong>，如下1<br><img src="`+c+'"></p><p>直接在<strong>Buckets</strong>菜单中创建一个桶为<strong>test</strong><br><img src="'+d+'"></p><p>并且设置这个桶的隐私规则为<strong>public</strong>，如下：<br><img src="'+u+'"><br><img src="'+k+'"></p><h2 id="四、springboot整合minio上传文件" tabindex="-1"><a class="header-anchor" href="#四、springboot整合minio上传文件" aria-hidden="true">#</a> 四、SpringBoot整合MinIO上传文件</h2><h3 id="_4-1-获取accesskey和secretkey" tabindex="-1"><a class="header-anchor" href="#_4-1-获取accesskey和secretkey" aria-hidden="true">#</a> 4.1 获取accessKey和secretKey</h3><p>这里的<strong>accessKey</strong>和<strong>secretKey</strong>并不是图形界面登录名和密码，获取很简单，直接在图形界面中操作，如下图：<br><img src="'+m+'"><br><img src="'+v+`"></p><h3 id="_4-2-添加依赖" tabindex="-1"><a class="header-anchor" href="#_4-2-添加依赖" aria-hidden="true">#</a> <strong>4.2 添加依赖</strong></h3><p>添加MinIO的依赖，如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>    
    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>io<span class="token punctuation">.</span>minio<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>  
    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>minio<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>   
    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">8.2</span><span class="token number">.1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span> 
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-添加配置" tabindex="-1"><a class="header-anchor" href="#_4-3-添加配置" aria-hidden="true">#</a> 4.3 添加配置</h3><p>在<strong>aplication.yml</strong>配置中添加MInIO相关的配置，如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>minio<span class="token operator">:</span>
  # 访问的url
  endpoint<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>
  # <span class="token constant">API</span>的端口
  port<span class="token operator">:</span> <span class="token number">9001</span>
  # 秘钥
  accessKey<span class="token operator">:</span> <span class="token operator">*</span>
  secretKey<span class="token operator">:</span> <span class="token operator">*</span>
  secure<span class="token operator">:</span> <span class="token boolean">false</span>
  bucket<span class="token operator">-</span>name<span class="token operator">:</span> mes # 桶名 我这是给出了一个默认桶名
  image<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">10485760</span> # 我在这里设定了 图片文件的最大大小
  file<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">1073741824</span> # 此处是设定了文件的最大大小
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;minio&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MinioProperties</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> endpoint<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Integer</span> port<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> accessKey<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> secretKey<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> secure<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> bucketName<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">long</span> imageSize<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">long</span> fileSize<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MinioClient</span> <span class="token function">minioClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MinioClient</span> minioClient <span class="token operator">=</span>
                <span class="token class-name">MinioClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">credentials</span><span class="token punctuation">(</span>accessKey<span class="token punctuation">,</span> secretKey<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">endpoint</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span>port<span class="token punctuation">,</span>secure<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> minioClient<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>关于Minio工具类等其他代码请联系作者获取</strong></p><img src="`+g+'"><p>接口返回的<strong>URL</strong>就是文件的访问地址，直接输入浏览器访问即可。<br> 在MInIO中也可以看到存储的文件，如下图：<br><img src="'+b+'"></p><p>可以手动分享，有效期是7天，一旦过了这个有效期将会失效!<br><img src="'+h+'"></p><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2><p>五、Minio 实现多层级目录</p><img src="'+_+'"><h2 id="-1" tabindex="-1"><a class="header-anchor" href="#-1" aria-hidden="true">#</a></h2><p>六、Minio集群搭建</p><h2 id="-2" tabindex="-1"><a class="header-anchor" href="#-2" aria-hidden="true">#</a></h2><p>七、Minio 数据迁移</p>',36);function q(N,z){const a=i("ExternalLinkIcon");return p(),r("div",null,[I,n("ol",null,[M,y,S,x,n("li",null,[K,s("： "),n("ul",null,[n("li",null,[s("GO SDK："),n("a",C,[s("https://github.com/minio/minio-go"),e(a)])]),n("li",null,[s("JavaSDK："),n("a",E,[s("https://github.com/minio/minio-java"),e(a)])]),n("li",null,[s("PythonSDK："),n("a",j,[s("https://github.com/minio/minio-py"),e(a)])])])]),w,O]),A])}const B=t(f,[["render",q],["__file","MinIO.html.vue"]]);export{B as default};
