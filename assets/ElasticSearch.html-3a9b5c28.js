import{_ as p,r as o,o as c,c as l,a as n,b as s,d as e,f as a}from"./app-8ab1e15b.js";const i={},u=a(`<h1 id="elasticsearch" tabindex="-1"><a class="header-anchor" href="#elasticsearch" aria-hidden="true">#</a> ElasticSearch</h1><h2 id="一、elasticsearch是什么" tabindex="-1"><a class="header-anchor" href="#一、elasticsearch是什么" aria-hidden="true">#</a> 一、ElasticSearch是什么</h2><p>分布式搜索和分析引擎，主要实现近乎实时的搜索和分析。可以实现海量数据的存储（⽀持PB级别的数<br> 据），可以实现快速搜索（倒排索引）还可以实现数据分析处理.</p><p><strong>实现海量数据下快速搜索</strong></p><p>绝对不使⽤模糊查询，因为性能太低。<br> 解决海量数据的快速搜索，就需要使⽤全⽂检索技术，选择ElasticSearch<br> 市⾯上有全⽂检索技术：Lucene、Solr(底层：Lucene)、ElasticSearch（底层：Lucene）<br> ⽬前市⾯上：ElasticSearch<br> ELK：ElasticSearch（存储、搜索）+Logstash（采集）+Kibana（可视化） ⽇志平台<br><strong>主要存储的查询的数据，⽀持海量数据存储和查询，⼀定要带条件</strong><br> 主流：ElasticSearch</p><h3 id="_1-1elasticsearch的特性" tabindex="-1"><a class="header-anchor" href="#_1-1elasticsearch的特性" aria-hidden="true">#</a> 1.1Elasticsearch的特性</h3><p>ElasticSearch是基于Lucene开发的分布式搜索框架，包含如下特性：</p><ol><li>分布式索引、搜索。</li><li>索引自动分片、负载均衡。</li><li>自动发现机器、组建集群。</li><li>支持Restful 风格接口。</li><li>配置简单等。</li><li>海量数据的存储。</li><li>高亮显示</li></ol><h3 id="_1-2-基本概念" tabindex="-1"><a class="header-anchor" href="#_1-2-基本概念" aria-hidden="true">#</a> 1.2 基本概念</h3><p><strong>1.2.1 Index (索引)</strong><br> 动词 ，相当于Mysql 中的insert<br> 名词， 相当于Mysql 中的 Database<br><strong>1.2.2 Type （类型）</strong><br> 在Index(索引)中 ，可以定义一个或多个类型。<br> 类似Mysql 中的table ,每一种类型的数据放在一起<br><strong>_doc: ElasticSearch 新版本默认的类型</strong><br><strong>1.2.3 Document （文档）</strong><br> 保存在某个索引（index）下，某种类型（type）的一个数据（Document） ,文档是json 格式的，Document 就像是Mysql 中某个table里面的内容。</p><table><thead><tr><th>MySQL</th><th>ElasticSearch</th></tr></thead><tbody><tr><td>DataBase 数据库</td><td>Index 索引</td></tr><tr><td>Table 表</td><td>Type 类型</td></tr><tr><td>Row 一行数据</td><td>Document 文档</td></tr></tbody></table><h3 id="_1-3-倒排索引" tabindex="-1"><a class="header-anchor" href="#_1-3-倒排索引" aria-hidden="true">#</a> 1.3 倒排索引</h3><figure><img src="https://steven-kz.github.io/BlogImgs/imgaes/20230812174124.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="_1-4-es结构" tabindex="-1"><a class="header-anchor" href="#_1-4-es结构" aria-hidden="true">#</a> 1.4 ES结构</h3><ul><li>ES的服务中，可以创建多个索引。</li><li>每一个索引默认被分成5片存储。</li><li>每一个分片都会存在至少一个备份分片。</li><li>备份分片默认不会帮助检索数据，当ES检索压力特别大的时候，备份分片才会帮助检索数据。</li><li>备份的分片必须放在不同的服务器中。理解： 索引index是es 中最大的数据存储单位 ，和mysql 的区别是 一个索引（index）中可以存海量（几亿条）数据 ，如果我们要在几亿条数据中检索出几条想要的数据 效率会很低 所以 es 提供了 一种对索引进行分片的机制 ，ES 天然支持集群，在集群服务器中 ES 把一个索引进行分片 放在不同的服务器上 如下图 例如 有一亿条数据 分成两个分片 每个分片上有5000万条数据 这样做的好处 一是 提高查询速度 二是 提高数据的存储量，另外 为了保证数据的安全 每个主分片会有备份分片 主分片和备份分片在不同的服务器上 ， 比如 主分片2 挂掉了 在 ES服务1 上面 还有 主分片2的备份分片 ，这样在一定程度上保证了数据的安全性 避免数据的丢失。但是 如果 当前集群中 只有一台es服务器 那么 这台服务器上 放的都是主分片，没有备份分片，什么时候扩展了集群中的 另一台服务器 才会存放备份分片。<br> | 索引分片备份 |<br> | --- |<br> | <img src="https://steven-kz.github.io/BlogImgs/imgaes/20230812174205.png" alt="image.png" loading="lazy"></li></ul><h2 id="二、搭建es-kibana" tabindex="-1"><a class="header-anchor" href="#二、搭建es-kibana" aria-hidden="true">#</a> 二、搭建ES Kibana</h2><h3 id="_2-1-安装docker-compose" tabindex="-1"><a class="header-anchor" href="#_2-1-安装docker-compose" aria-hidden="true">#</a> 2.1 安装docker-compose</h3><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>1<span class="token punctuation">.</span> cd <span class="token operator">/</span>usr/local/bin <span class="token comment">#切换到安装路径</span>
2<span class="token punctuation">.</span> wget https:<span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com/docker/compose/releases/download/1<span class="token punctuation">.</span>14<span class="token punctuation">.</span>0-rc2/docker-compose-Linux-x86_64  <span class="token comment"># 下载安装源</span>
3<span class="token punctuation">.</span> rename docker-compose-Linux-x86_64 docker-compose docker-compose-Linux-x86_64 <span class="token comment"># 重命名安装下载的安装包</span>
4<span class="token punctuation">.</span> chmod <span class="token operator">+</span>x <span class="token operator">/</span>usr/local/bin/docker-compose
5<span class="token punctuation">.</span> docker-compose version <span class="token comment"># 查看是否安装成功</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-拉起镜像" tabindex="-1"><a class="header-anchor" href="#_2-2-拉起镜像" aria-hidden="true">#</a> 2.2 拉起镜像</h3><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>mkdir <span class="token operator">-</span>p <span class="token operator">/</span>opt/docker_elasticsearch/config
mkdir <span class="token operator">-</span>p <span class="token operator">/</span>opt/docker_elasticsearch/<span class="token keyword">data</span>
mkdir <span class="token operator">-</span>p <span class="token operator">/</span>opt/docker_elasticsearch/plugins
<span class="token function">echo</span> <span class="token string">&quot;http.host: 0.0.0.0&quot;</span>  &gt;&gt;  <span class="token operator">/</span>opt/docker_elasticsearch/config/elasticsearch<span class="token punctuation">.</span>yml
chmod 777 config
chmod 777 <span class="token keyword">data</span>
vi docker-compose<span class="token punctuation">.</span>yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&quot;3.1&quot;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
 <span class="token key atrule">elasticsearch</span><span class="token punctuation">:</span>
  <span class="token key atrule">image</span><span class="token punctuation">:</span> daocloud.io/library/elasticsearch<span class="token punctuation">:</span>7.4.2
  <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
  <span class="token key atrule">container_name</span><span class="token punctuation">:</span> elasticsearch
  <span class="token key atrule">environment</span><span class="token punctuation">:</span>
     <span class="token punctuation">-</span> <span class="token string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span>
  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
     <span class="token punctuation">-</span> /opt/docker_elasticsearch/config/elasticsearch.yml<span class="token punctuation">:</span>/usr/share/elasticsearch/config/elasticsearch.yml
     <span class="token punctuation">-</span> /opt/docker_elasticsearch/data<span class="token punctuation">:</span>/usr/share/elasticsearch/data
     <span class="token punctuation">-</span> /opt/docker_elasticsearch/plugins<span class="token punctuation">:</span>/usr/share/elasticsearch/plugins
  <span class="token key atrule">ports</span><span class="token punctuation">:</span>
     <span class="token punctuation">-</span> 9200<span class="token punctuation">:</span><span class="token number">9200</span>
     <span class="token punctuation">-</span> 9300<span class="token punctuation">:</span><span class="token number">9300</span>
 <span class="token key atrule">kibana</span><span class="token punctuation">:</span>
   <span class="token key atrule">image</span><span class="token punctuation">:</span> daocloud.io/library/kibana<span class="token punctuation">:</span>7.4.2
   <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
   <span class="token key atrule">container_name</span><span class="token punctuation">:</span> kibana
   <span class="token key atrule">ports</span><span class="token punctuation">:</span>
     <span class="token punctuation">-</span> 5601<span class="token punctuation">:</span><span class="token number">5601</span>
   <span class="token key atrule">environment</span><span class="token punctuation">:</span>
     <span class="token punctuation">-</span> elasticsearch_url=http<span class="token punctuation">:</span>//120.26.105.43<span class="token punctuation">:</span><span class="token number">9200</span>
   <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>
     <span class="token punctuation">-</span> elasticsearch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行操作yml文件没脸 拉取镜像 **docker-compose up -d **<br> 启动日志：<strong>docker-compose logs -f</strong></p><figure><img src="https://steven-kz.github.io/BlogImgs/imgaes/20230812174710.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h4 id="_2-2-1-查看是否安装成功" tabindex="-1"><a class="header-anchor" href="#_2-2-1-查看是否安装成功" aria-hidden="true">#</a> 2.2.1 查看是否安装成功</h4>`,24),r=n("br",null,null,-1),k=n("img",{src:"https://steven-kz.github.io/BlogImgs/imgaes/20230812174807.png",alt:"image.png",loading:"lazy"},null,-1),d=n("br",null,null,-1),v={href:"http://120.26.105.43:9200/",target:"_blank",rel:"noopener noreferrer"},m=n("br",null,null,-1),b=a(`<div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span> : <span class="token string">&quot;2fd261b080fb&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;cluster_name&quot;</span> : <span class="token string">&quot;elasticsearch&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;cluster_uuid&quot;</span> : <span class="token string">&quot;k9AKmU-1QdS-3GecdD0MOg&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;version&quot;</span> : <span class="token punctuation">{</span>
    <span class="token string">&quot;number&quot;</span> : <span class="token string">&quot;7.4.2&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;build_flavor&quot;</span> : <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;build_type&quot;</span> : <span class="token string">&quot;docker&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;build_hash&quot;</span> : <span class="token string">&quot;2f90bbf7b93631e52bafb59b3b049cb44ec25e96&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;build_date&quot;</span> : <span class="token string">&quot;2019-10-28T20:40:44.881551Z&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;build_snapshot&quot;</span> : false<span class="token punctuation">,</span>
    <span class="token string">&quot;lucene_version&quot;</span> : <span class="token string">&quot;8.2.0&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;minimum_wire_compatibility_version&quot;</span> : <span class="token string">&quot;6.8.0&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;minimum_index_compatibility_version&quot;</span> : <span class="token string">&quot;6.0.0-beta1&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string">&quot;tagline&quot;</span> : <span class="token string">&quot;You Know, for Search&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),g={href:"http://120.26.105.43:5601/",target:"_blank",rel:"noopener noreferrer"},h=n("br",null,null,-1),q=n("br",null,null,-1),y=n("img",{src:"https://steven-kz.github.io/BlogImgs/imgaes/20230812174853.png",alt:"image.png",loading:"lazy"},null,-1),f=a(`<h3 id="_2-3-ik分词器" tabindex="-1"><a class="header-anchor" href="#_2-3-ik分词器" aria-hidden="true">#</a> 2.3 IK分词器</h3><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker exec <span class="token operator">-</span>it elasticsearch bash
cd bin/
<span class="token punctuation">.</span><span class="token operator">/</span>elasticsearch-plugin install https:<span class="token operator">/</span><span class="token operator">/</span>ghproxy<span class="token punctuation">.</span>com/https:<span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com/medcl/elasticsearch-analysis-ik/releases/download/v7<span class="token punctuation">.</span>4<span class="token punctuation">.</span>2/elasticsearch-analysis-ik-7<span class="token punctuation">.</span>4<span class="token punctuation">.</span>2<span class="token punctuation">.</span>zip
<span class="token comment"># 查看是否安装完毕</span>
<span class="token punctuation">.</span><span class="token operator">/</span>elasticsearch-plugin list
analysis-ik <span class="token comment"># ik分词器</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完毕后退出容器<strong>重启es</strong> 执行操作yml文件：docker-compose restart<br> 若安装失败需删除插件重新安装 bin目录下</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token punctuation">.</span><span class="token operator">/</span>elasticsearch-plugin list
<span class="token punctuation">.</span><span class="token operator">/</span>elasticsearch-plugin remove analysis-ik
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-2-测试分词器" tabindex="-1"><a class="header-anchor" href="#_2-3-2-测试分词器" aria-hidden="true">#</a> 2.3.2 测试分词器</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token comment"># 默认分词器</span>
POST _analyze 
<span class="token punctuation">{</span>
  <span class="token string">&quot;text&quot;</span>: <span class="token punctuation">[</span><span class="token string">&quot;中国伟大&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token comment"># ik分词器</span>
<span class="token comment"># 粗粒度分词</span>
POST _analyze 
<span class="token punctuation">{</span>
  <span class="token string">&quot;text&quot;</span>: <span class="token punctuation">[</span><span class="token string">&quot;中国伟大&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">,</span> <span class="token string">&quot;analyzer&quot;</span>: <span class="token string">&quot;ik_smart&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment"># ik分词器</span>
<span class="token comment"># 细粒度分词</span>
POST _analyze 
<span class="token punctuation">{</span>
  <span class="token string">&quot;text&quot;</span>: <span class="token punctuation">[</span><span class="token string">&quot;寇哲邱莹莹快快乐乐身体健康&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">,</span> <span class="token string">&quot;analyzer&quot;</span>: <span class="token string">&quot;ik_max_word&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-设置密码" tabindex="-1"><a class="header-anchor" href="#_2-4-设置密码" aria-hidden="true">#</a> 2.4 设置密码</h3><h4 id="_2-4-1-es-pwd" tabindex="-1"><a class="header-anchor" href="#_2-4-1-es-pwd" aria-hidden="true">#</a> 2.4.1 es pwd</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>第一步：进入ES容器。命令：docker exec <span class="token operator">-</span>it es <span class="token operator">/</span>bin/bash
第二步：在ES的配置文件中添加以下配置 命令：vi config/elasticsearch<span class="token punctuation">.</span>yml
<span class="token comment">#添加如下内容</span>
http<span class="token punctuation">.</span>cors<span class="token punctuation">.</span>enabled: true
http<span class="token punctuation">.</span>cors<span class="token punctuation">.</span>allow-origin: <span class="token string">&quot;*&quot;</span>
http<span class="token punctuation">.</span>cors<span class="token punctuation">.</span>allow-headers: Authorization
xpack<span class="token punctuation">.</span>security<span class="token punctuation">.</span>enabled: true
xpack<span class="token punctuation">.</span>security<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span>enabled: true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第三步：重启es docker restart es 之后<strong>再次进入容器</strong>输入后 设置密码 大概10几种</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token punctuation">.</span><span class="token operator">/</span>bin/elasticsearch-setup-passwords interactive
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://steven-kz.github.io/BlogImgs/imgaes/20230812174952.png" alt="image.png" loading="lazy"><br> 修改密码</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /_security/user/elastic/_password
<span class="token punctuation">{</span>
  <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123456&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改密码之后，需要重新设置kibana的配置文件，才可以重新使用kibana</p><h4 id="_2-4-2-kibana-pwd" tabindex="-1"><a class="header-anchor" href="#_2-4-2-kibana-pwd" aria-hidden="true">#</a> 2.4.2 kibana pwd</h4><p>第一步：进入kibana容器。命令：docker exec -it kibana /bin/bash<br> 第二步：配置账号密码，在kibana.yml配置文件中添加以下内容。 命令：vi config/kibana.yml</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token comment">#添加以下内容</span>
elasticsearch<span class="token punctuation">.</span>username: <span class="token string">&quot;elastic&quot;</span>
elasticsearch<span class="token punctuation">.</span>password: <span class="token string">&quot;你在es中设置的密码&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>退出容器 重启即可</p><h2 id="三、es操作" tabindex="-1"><a class="header-anchor" href="#三、es操作" aria-hidden="true">#</a> 三、ES操作</h2><h3 id="_3-1-es-field可以指定类型" tabindex="-1"><a class="header-anchor" href="#_3-1-es-field可以指定类型" aria-hidden="true">#</a> 3.1 Es Field可以指定类型</h3>`,20),_=n("br",null,null,-1),S=n("br",null,null,-1),w=n("br",null,null,-1),x=n("br",null,null,-1),B=n("br",null,null,-1),R=n("br",null,null,-1),j=n("br",null,null,-1),E=n("br",null,null,-1),T=n("br",null,null,-1),Q=n("br",null,null,-1),C=n("br",null,null,-1),H=n("br",null,null,-1),L=n("br",null,null,-1),z=n("br",null,null,-1),A=n("br",null,null,-1),I=n("br",null,null,-1),O=n("br",null,null,-1),P=n("br",null,null,-1),D=n("br",null,null,-1),U=n("br",null,null,-1),M=n("br",null,null,-1),F=n("br",null,null,-1),V=n("br",null,null,-1),N=n("br",null,null,-1),G=n("br",null,null,-1),K=n("br",null,null,-1),$=n("br",null,null,-1),J=n("br",null,null,-1),X=n("br",null,null,-1),Y={href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.6/mapping-types.html",target:"_blank",rel:"noopener noreferrer"},W=a(`<h3 id="_3-2-kibana快捷键操作" tabindex="-1"><a class="header-anchor" href="#_3-2-kibana快捷键操作" aria-hidden="true">#</a> 3.2 Kibana快捷键操作</h3><blockquote><p>ctrl i 自动补全<br> ctrl / 打开帮助文档<br> ctrl Enter 执行当前选中的请求</p></blockquote><h3 id="_3-3-索引操作" tabindex="-1"><a class="header-anchor" href="#_3-3-索引操作" aria-hidden="true">#</a> 3.3 索引操作</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token comment"># 查看所有节点</span>
GET /_cat/nodes
<span class="token comment"># 查看es 健康状况</span>
GET /_cat/health
<span class="token comment">#查看主节点</span>
GET /_cat/master

<span class="token comment">#查看所有索引;</span>
GET /_cat/indices
<span class="token comment">#查询索引信息,相当于查看 数据库表结构</span>
GET /sms_log_test

<span class="token comment">#删除索引</span>
DELETE book
<span class="token comment"># 创建索引,重复执行会报错</span>
PUT test1
<span class="token comment"># 创建索引同时手动指定配置信息</span>
PUT test2
<span class="token punctuation">{</span>
<span class="token string">&quot;settings&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
<span class="token string">&quot;number_of_shards&quot;</span><span class="token builtin class-name">:</span> <span class="token number">3</span>,  分片
<span class="token string">&quot;number_of_replicas&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span> 备份
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment"># 查询索引详情</span>
GET test2

<span class="token comment"># 查询指定的文档信息 </span>
GET sms_log_test/_doc/doc_id


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://steven-kz.github.io/BlogImgs/imgaes/20230812175123.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h4 id="_3-3-1-创建指定数据结构索引" tabindex="-1"><a class="header-anchor" href="#_3-3-1-创建指定数据结构索引" aria-hidden="true">#</a> 3.3.1 创建指定数据结构索引</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code># 创建索引，指定数据结构
PUT /book
<span class="token punctuation">{</span>
  <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    # 分片数
    <span class="token property">&quot;number_of_shards&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    # 备份数
    <span class="token property">&quot;number_of_replicas&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  # 指定数据结构
  <span class="token property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    # 文档存储的Field
    <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      # Field属性名
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        # 类型
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
        # 指定当前Field可以被作为查询的条件
        <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">,</span>
        # 是否需要额外存储
        <span class="token property">&quot;store&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span> 
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        # keyword 也算是字符串类型 
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;count&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;long&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;on-sale&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;date&quot;</span><span class="token punctuation">,</span>
        # 时间类型的格式化方式 
        <span class="token property">&quot;format&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;descr&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-文档操作" tabindex="-1"><a class="header-anchor" href="#_3-4-文档操作" aria-hidden="true">#</a> 3.4 文档操作</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 添加文档，手动指定id      推荐使用</span>
（可不指定Id:PUT /book/_doc/）

PUT /book/_doc/1
<span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;红楼梦&quot;</span>,
  <span class="token string">&quot;author&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;曹雪芹&quot;</span>,
  <span class="token string">&quot;count&quot;</span><span class="token builtin class-name">:</span> <span class="token number">10000000</span>,
  <span class="token string">&quot;on-sale&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;1985-01-01&quot;</span>,
  <span class="token string">&quot;descr&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;一个是阆苑仙葩，一个是美玉无瑕&quot;</span>
<span class="token punctuation">}</span>
<span class="token comment"># 修改文档   覆盖式修改  如果没有指定某个属性 这个属性会被覆盖掉  覆盖没了</span>
PUT /book/_doc/1
<span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;红楼梦&quot;</span>,
  <span class="token string">&quot;author&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;曹雪芹&quot;</span>,
  <span class="token string">&quot;count&quot;</span><span class="token builtin class-name">:</span> <span class="token number">4353453</span>,
  <span class="token string">&quot;on-sale&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;1985-01-01&quot;</span>,
  <span class="token string">&quot;descr&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;一个是阆苑仙葩，一个是美玉无瑕&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment"># 删除文档</span>
DELETE sms_log_test/_doc/doc_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-kibana-可视化界面中可以看到-创建的索引信息" tabindex="-1"><a class="header-anchor" href="#_3-5-kibana-可视化界面中可以看到-创建的索引信息" aria-hidden="true">#</a> 3.5 kibana 可视化界面中可以看到 创建的索引信息</h3><p><img src="https://steven-kz.github.io/BlogImgs/imgaes/20230812175210.png" alt="image.png" loading="lazy"><img src="https://steven-kz.github.io/BlogImgs/imgaes/20230812175233.png" alt="image.png" loading="lazy"><br><img src="https://steven-kz.github.io/BlogImgs/imgaes/20230812175304.png" alt="image.png" loading="lazy"><img src="https://steven-kz.github.io/BlogImgs/imgaes/20230812175330.png" alt="image.png" loading="lazy"></p><h2 id="四、java操作es-demo" tabindex="-1"><a class="header-anchor" href="#四、java操作es-demo" aria-hidden="true">#</a> 四、Java操作ES Demo *</h2><p>Java代码均为原始操作Es，**非 import org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate; **</p><p>新增文档 id一致相当于update</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 由于我们使用的es的版本是7.4.2 手动指定下ES的版本 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>elasticsearch.version</span><span class="token punctuation">&gt;</span></span>7.4.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>elasticsearch.version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>yml配置</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
<span class="token key atrule">elasticsearch</span><span class="token punctuation">:</span>
<span class="token comment"># 指定ElasticSearch连接信息</span>
<span class="token key atrule">uris</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//Ip<span class="token punctuation">:</span><span class="token number">9200</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方式二：密码连接</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">elasticsearch</span><span class="token punctuation">:</span>
  <span class="token key atrule">schema</span><span class="token punctuation">:</span> http
  <span class="token key atrule">address</span><span class="token punctuation">:</span> 120.26.105.43<span class="token punctuation">:</span><span class="token number">9200</span>
  <span class="token key atrule">connectTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>
  <span class="token key atrule">socketTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>
  <span class="token key atrule">connectionRequestTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>
  <span class="token key atrule">maxConnectNum</span><span class="token punctuation">:</span> <span class="token number">100</span>
  <span class="token key atrule">maxConnectPerRoute</span><span class="token punctuation">:</span> <span class="token number">100</span>
  <span class="token key atrule">userName</span><span class="token punctuation">:</span> elastic
  <span class="token key atrule">password</span><span class="token punctuation">:</span> Kz898989
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Configuration</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ElasticSearchConfiguration</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 协议 */</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.schema:http}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> schema<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 集群地址，如果有多个用“,”隔开 */</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.address}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 连接超时时间 */</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.connectTimeout}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> connectTimeout<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** Socket 连接超时时间 */</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.socketTimeout}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> socketTimeout<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 获取连接的超时时间 */</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.connectionRequestTimeout}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> connectionRequestTimeout<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 最大连接数 */</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.maxConnectNum}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> maxConnectNum<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 最大路由连接数 */</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.maxConnectPerRoute}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> maxConnectPerRoute<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.userName}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.password}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>


    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;restHighLevelClient&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">RestHighLevelClient</span> <span class="token function">restHighLevelClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 拆分地址</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HttpHost</span><span class="token punctuation">&gt;</span></span> hostLists <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hostList <span class="token operator">=</span> address<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> addr <span class="token operator">:</span> hostList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> host <span class="token operator">=</span> addr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> port <span class="token operator">=</span> addr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            hostLists<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpHost</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">,</span> schema<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">final</span> <span class="token class-name">CredentialsProvider</span> credentialsProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicCredentialsProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        credentialsProvider<span class="token punctuation">.</span><span class="token function">setCredentials</span><span class="token punctuation">(</span><span class="token class-name">AuthScope</span><span class="token punctuation">.</span><span class="token constant">ANY</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordCredentials</span><span class="token punctuation">(</span>userName<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 转换成 HttpHost 数组</span>
        <span class="token class-name">HttpHost</span><span class="token punctuation">[</span><span class="token punctuation">]</span> httpHost <span class="token operator">=</span> hostLists<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpHost</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 构建连接对象</span>
        <span class="token class-name">RestClientBuilder</span> builder <span class="token operator">=</span> <span class="token class-name">RestClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>httpHost<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 异步连接延时配置</span>
        builder<span class="token punctuation">.</span><span class="token function">setRequestConfigCallback</span><span class="token punctuation">(</span>requestConfigBuilder <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            requestConfigBuilder<span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span>connectTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
            requestConfigBuilder<span class="token punctuation">.</span><span class="token function">setSocketTimeout</span><span class="token punctuation">(</span>socketTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
            requestConfigBuilder<span class="token punctuation">.</span><span class="token function">setConnectionRequestTimeout</span><span class="token punctuation">(</span>connectionRequestTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> requestConfigBuilder<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 异步连接数配置</span>
        builder<span class="token punctuation">.</span><span class="token function">setHttpClientConfigCallback</span><span class="token punctuation">(</span>httpClientBuilder <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            httpClientBuilder<span class="token punctuation">.</span><span class="token function">setMaxConnTotal</span><span class="token punctuation">(</span>maxConnectNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
            httpClientBuilder<span class="token punctuation">.</span><span class="token function">setMaxConnPerRoute</span><span class="token punctuation">(</span>maxConnectPerRoute<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> httpClientBuilder<span class="token punctuation">.</span><span class="token function">setDefaultCredentialsProvider</span><span class="token punctuation">(</span>credentialsProvider<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestHighLevelClient</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">RestHighLevelClient</span> esClient<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、es查询" tabindex="-1"><a class="header-anchor" href="#五、es查询" aria-hidden="true">#</a> 五、ES查询 *</h2><h3 id="_5-1-term查询" tabindex="-1"><a class="header-anchor" href="#_5-1-term查询" aria-hidden="true">#</a> 5.1 term查询</h3><p>term的查询是代表完全匹配，搜索之前不会对你搜索的关键字进行分词，对你的关键字去文档分词库中去匹配内容。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code># 查询 
# term完整匹配 不进行分词

POST sms-logs-index/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;from&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>   limit
  <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> 
  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;term&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;province&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;上海&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明： term 不对查询条件进行分词，field是text或者keyword 类型<br> 分别是 对文档内容分词（text）和不分词(keyword)<br> 如果查询是keyword类型就使用term</p><h4 id="_5-1-2-查询结果说明" tabindex="-1"><a class="header-anchor" href="#_5-1-2-查询结果说明" aria-hidden="true">#</a> 5.1.2 查询结果说明</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code># 查询结果说明
<span class="token punctuation">{</span>
  <span class="token property">&quot;took&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>    # 查询用了<span class="token number">2</span>毫秒
  <span class="token property">&quot;timed_out&quot;</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    # 是否超时  没有超时
  <span class="token property">&quot;_shards&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>    # 分片信息
    <span class="token property">&quot;total&quot;</span> <span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>   # 一共使用三个分片
    <span class="token property">&quot;successful&quot;</span> <span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>   # 成功了三个分片
    <span class="token property">&quot;skipped&quot;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    # 跳过
    <span class="token property">&quot;failed&quot;</span> <span class="token operator">:</span> <span class="token number">0</span>      # 失败
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;hits&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>           # 查询命中
    <span class="token property">&quot;total&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>         # 总命中
      <span class="token property">&quot;value&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>      # 命中数
      <span class="token property">&quot;relation&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>  # 查询关系
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;max_score&quot;</span> <span class="token operator">:</span> <span class="token number">0.6931472</span><span class="token punctuation">,</span>    # 匹配分数   匹配度越高  分数越高
    <span class="token property">&quot;hits&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;_index&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;sms-logs-index&quot;</span><span class="token punctuation">,</span> 索引
        <span class="token property">&quot;_type&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span> 类型
        <span class="token property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;21&quot;</span><span class="token punctuation">,</span> 
        <span class="token property">&quot;_score&quot;</span> <span class="token operator">:</span> <span class="token number">0.6931472</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_source&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            存入的JSON数据
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-1-3-java操作demo" tabindex="-1"><a class="header-anchor" href="#_5-1-3-java操作demo" aria-hidden="true">#</a> 5.1.3 java操作Demo</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">termSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token string">&quot;sms-logs-index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//1.组装查询条件</span>
        <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        builder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termQuery</span><span class="token punctuation">(</span><span class="token string">&quot;province&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;上海&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.response</span>
        <span class="token class-name">SearchHit</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hit<span class="token punctuation">.</span><span class="token function">getScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-terms查询" tabindex="-1"><a class="header-anchor" href="#_5-2-terms查询" aria-hidden="true">#</a> 5.2 terms查询</h3><p>terms和term的查询机制是一样，都不会将指定的查询关键字进行分词，直接去分词库中匹配，找到相应文档内容。<br> terms是在针对一个字段包含多个值的时候使用。<br> term：where province = 北京；<br> terms：where province = 北京 or province = ？or province = ？<br> 一个字段可以等于多个值 有点类似 in<br> builder.query(QueryBuilders.<em>termsQuery</em>(&quot;province&quot;,&quot;上海&quot;,&quot;北京&quot;));</p><h3 id="_5-3-match查询" tabindex="-1"><a class="header-anchor" href="#_5-3-match查询" aria-hidden="true">#</a> 5.3 match查询</h3><p>match查询属于高层查询，他会根据你查询的字段类型不一样，采用不同的查询方式。<br> match查询，实际底层就是多个term查询，将多个term查询的结果给你封装到了一起。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    public void <span class="token keyword">match</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            SearchRequest request <span class="token operator">=</span> new SearchRequest<span class="token punctuation">(</span><span class="token string">&quot;sms-logs-index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">//</span><span class="token number">1.</span>组装查询条件
            SearchSourceBuilder builder <span class="token operator">=</span> new SearchSourceBuilder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span>query<span class="token punctuation">(</span>QueryBuilders<span class="token punctuation">.</span>matchQuery<span class="token punctuation">(</span><span class="token string">&quot;province&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;上海&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>operator<span class="token punctuation">(</span>Operator<span class="token punctuation">.</span>OR<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            request<span class="token punctuation">.</span>source<span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
            SearchResponse response <span class="token operator">=</span> esClient<span class="token punctuation">.</span>search<span class="token punctuation">(</span>request<span class="token punctuation">,</span> RequestOptions<span class="token punctuation">.</span>DEFAULT<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">//</span><span class="token number">2</span><span class="token punctuation">.</span>response
            SearchHit<span class="token punctuation">[</span><span class="token punctuation">]</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span>getHits<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getHits<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>SearchHit hit <span class="token punctuation">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                System<span class="token punctuation">.</span>err<span class="token punctuation">.</span>println<span class="token punctuation">(</span>hit<span class="token punctuation">.</span>getSourceAsString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> catch <span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            throw new AppException<span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&quot;批量删除文档失败%s&quot;</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span>getMessage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-4-multi-match查询" tabindex="-1"><a class="header-anchor" href="#_5-4-multi-match查询" aria-hidden="true">#</a> 5.4 multi_match查询</h3><p>match针对一个field做检索，multi_match针对多个field进行检索，多个field对应一个text。<br> 针对多个索引同时查询</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>builder<span class="token punctuation">.</span>query<span class="token punctuation">(</span>QueryBuilders<span class="token punctuation">.</span>multiMatchQuery<span class="token punctuation">(</span><span class="token string">&quot;province&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;上海&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;北京&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>operator<span class="token punctuation">(</span>Operator<span class="token punctuation">.</span>OR<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-5-ids查询" tabindex="-1"><a class="header-anchor" href="#_5-5-ids查询" aria-hidden="true">#</a> 5.5 ids查询</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>builder<span class="token punctuation">.</span>query<span class="token punctuation">(</span>QueryBuilders<span class="token punctuation">.</span>idsQuery<span class="token punctuation">(</span><span class="token string">&quot;province&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>addIds<span class="token punctuation">(</span><span class="token string">&quot;郑州&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-6-prefix查询" tabindex="-1"><a class="header-anchor" href="#_5-6-prefix查询" aria-hidden="true">#</a> 5.6 prefix查询</h3><p>针对keyword类型，可以进行<strong>前缀查询</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    builder<span class="token punctuation">.</span>query<span class="token punctuation">(</span>QueryBuilders<span class="token punctuation">.</span>prefixQuery<span class="token punctuation">(</span><span class="token string">&quot;province&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;台湾&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-7-fuzzy查询" tabindex="-1"><a class="header-anchor" href="#_5-7-fuzzy查询" aria-hidden="true">#</a> 5.7 fuzzy查询</h3><p><strong>模糊查询</strong>，我们输入字符的大概（比如 出现错别字），ES就可以去根据输入的内容大概去匹配一下结果。<br> prefixLength指定前面几个字符是不允许出现错误的</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    builder<span class="token punctuation">.</span>query<span class="token punctuation">(</span>QueryBuilders<span class="token punctuation">.</span>fuzzyQuery<span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>prefixLength<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-8-wildcard查询" tabindex="-1"><a class="header-anchor" href="#_5-8-wildcard查询" aria-hidden="true">#</a> 5.8 wildcard查询</h3><p><strong>通配查询</strong>，和MySQL中的like是一个套路，可以在查询时，在字符串中指定通配符*和占位符？<br> *号匹配多个字符 ?匹配一个字符</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    builder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">wildcardQuery</span><span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;王五*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-9-range查询" tabindex="-1"><a class="header-anchor" href="#_5-9-range查询" aria-hidden="true">#</a> 5.9 range查询</h3><p>范围查询，只针对数值类型，对某一个Field进行大于或者小于的范围指定<br> 可以使用 gt：&gt; gte：&gt;= lt：&lt; lte：&lt;=</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    builder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">rangeQuery</span><span class="token punctuation">(</span><span class="token string">&quot;fee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lte</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-10-regexp查询" tabindex="-1"><a class="header-anchor" href="#_5-10-regexp查询" aria-hidden="true">#</a> 5.10 regexp查询</h3>`,53),Z=n("br",null,null,-1),nn={href:"https://www.sojson.com/regex/generate",target:"_blank",rel:"noopener noreferrer"},sn=a(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>builder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">regexpQuery</span><span class="token punctuation">(</span><span class="token string">&quot;mobile&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0?(13|14|15|18|17)[0-9]{9}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-11-深分页scroll" tabindex="-1"><a class="header-anchor" href="#_5-11-深分页scroll" aria-hidden="true">#</a> 5.11 深分页Scroll</h3><blockquote><p>ES对from + size是有限制的，from和size二者之和不能超过1W<br> 原理：</p><ul><li>from+size在ES查询数据的方式：</li><li>第一步先将用户指定的关键进行分词。</li><li>第二步将词汇去分词库中进行检索，得到多个文档的id。</li><li>第三步去各个分片中去拉取指定的<strong>全部数据</strong>。耗时较长。</li><li>第四步将数据根据score进行排序。耗时较长。</li><li>第五步根据from的值，将查询到的数据舍弃一部分。</li><li>第六步返回结果。</li><li>scroll+size在ES查询数据的方式：</li><li>第一步先将用户指定的关键进行分词。</li><li>第二步将词汇去分词库中进行检索，得到多个文档的id。</li><li>第三步将文档的id存放在一个ES的上下文中。</li><li>第四步根据你指定的size的个数去ES中检索指定个数的数据，拿完数据的文档id，会从上下文中移除。</li><li>第五步如果需要下一页数据，直接去ES的上下文中，找后续内容。</li><li>第六步循环第四步和第五步</li></ul></blockquote><p>Scroll查询方式，不适合做实时的查询</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">scroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token string">&quot;sms-logs-index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//设置ES上下文生产时间</span>
            request<span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token class-name">TimeValue</span><span class="token punctuation">.</span><span class="token function">timeValueMillis</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchAllQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//设置每页展示几条数据</span>
            builder<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//分页Id</span>
            <span class="token class-name">String</span> scrollId <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getScrollId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;首页数据&quot;</span><span class="token operator">+</span>scrollId<span class="token operator">+</span><span class="token string">&quot;--------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//2.response</span>
            <span class="token class-name">SearchHit</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//第一页数据</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hit<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//下页数据</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">SearchScrollRequest</span> scrollReq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchScrollRequest</span><span class="token punctuation">(</span>scrollId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//设置ES上下文生产时间</span>
                request<span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token class-name">TimeValue</span><span class="token punctuation">.</span><span class="token function">timeValueMillis</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//发起下一页请求</span>
                <span class="token class-name">SearchResponse</span> scrollRes <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span>scrollReq<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">SearchHit</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hits1 <span class="token operator">=</span> scrollRes<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//判断查询是否存在数据</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>hits1<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;最后一页-------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit1 <span class="token operator">:</span> hits1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hit1<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//清空ES上下文</span>
            <span class="token class-name">ClearScrollRequest</span> clearScrollRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClearScrollRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            clearScrollRequest<span class="token punctuation">.</span><span class="token function">addScrollId</span><span class="token punctuation">(</span>scrollId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ClearScrollResponse</span> clearScrollResponse <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">clearScroll</span><span class="token punctuation">(</span>clearScrollRequest<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clearScrollResponse<span class="token punctuation">.</span><span class="token function">isSucceeded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AppException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-12-delete-by-query" tabindex="-1"><a class="header-anchor" href="#_5-12-delete-by-query" aria-hidden="true">#</a> 5.12 delete-by-query</h3><p>查询并删除</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">//1. 创建DeleteByQueryRequest</span>
    <span class="token class-name">DeleteByQueryRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DeleteByQueryRequest</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//2. 指定检索的条件 和SearchRequest指定Query的方式不一样</span>
    request<span class="token punctuation">.</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">rangeQuery</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lt</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//3. 执行删除</span>
    <span class="token class-name">BulkByScrollResponse</span> resp <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">deleteByQuery</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//4. 输出返回结果</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-13-bool查询" tabindex="-1"><a class="header-anchor" href="#_5-13-bool查询" aria-hidden="true">#</a> 5.13 bool查询</h3><blockquote><p>复合过滤器，将你的多个查询条件，以一定的逻辑组合在一起。</p><ul><li>must： 所有的条件，用must组合在一起，表示And的意思</li><li>must_not：将must_not中的条件，全部都不能匹配，标识Not的意思</li><li>should：所有的条件，用should组合在一起，表示Or的意思</li></ul><p>must 必须同时满足 and<br> should 任意条件符合即可 or<br> must_not 取反 not</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">Bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1、创建查询请求的对象</span>
        <span class="token class-name">SearchRequest</span> searchRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token string">&quot;sms-logs-index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2、查询条件构造器</span>
        <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3、设置查询条件</span>
        <span class="token comment">// ------------</span>
        <span class="token class-name">BoolQueryBuilder</span> boolQueryBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BoolQueryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 查询省份为武汉或者北京</span>
        boolQueryBuilder<span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termQuery</span><span class="token punctuation">(</span><span class="token string">&quot;province&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;武汉&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        boolQueryBuilder<span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termQuery</span><span class="token punctuation">(</span><span class="token string">&quot;province&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;北京&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 运营商不是联通</span>
        boolQueryBuilder<span class="token punctuation">.</span><span class="token function">mustNot</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termQuery</span><span class="token punctuation">(</span><span class="token string">&quot;operatorId&quot;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// smsContent中包含中国和平安</span>
        boolQueryBuilder<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;smsContent&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;中国&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        boolQueryBuilder<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;smsContent&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;平安&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        builder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>boolQueryBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// ------------</span>
        searchRequest<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4、执行查询</span>
        <span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>searchRequest<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5、获取查询结果</span>
        <span class="token class-name">SearchHit</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> hit<span class="token punctuation">.</span><span class="token function">getSourceAsMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-14-filter查询" tabindex="-1"><a class="header-anchor" href="#_5-14-filter查询" aria-hidden="true">#</a> 5.14 filter查询</h3><p>过滤</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token comment">//1. SearchRequest</span>
        <span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token string">&quot;sms-logs-index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2. 查询条件</span>
        <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BoolQueryBuilder</span> boolQuery <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BoolQueryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        boolQuery<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termQuery</span><span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        boolQuery<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">rangeQuery</span><span class="token punctuation">(</span><span class="token string">&quot;fee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lte</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        builder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>boolQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3. 执行查询</span>
        <span class="token class-name">SearchResponse</span> resp <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//4. 输出结果</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> resp<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hit<span class="token punctuation">.</span><span class="token function">getSourceAsMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-15-高亮查询" tabindex="-1"><a class="header-anchor" href="#_5-15-高亮查询" aria-hidden="true">#</a> 5.15 高亮查询</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>            <span class="token comment">//    @ResultType(PcDocument.class)</span>
            <span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token string">&quot;sms-logs-index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//1.组装查询条件</span>
            <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;测试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">HighlightBuilder</span> highlightBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HighlightBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            highlightBuilder<span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">preTags</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;font color=&#39;red&#39;&gt;&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">postTags</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/font&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">highlighter</span><span class="token punctuation">(</span>highlightBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
            request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//2.response</span>
            <span class="token class-name">SearchHit</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hit<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hit<span class="token punctuation">.</span><span class="token function">getHighlightFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//4. 获取高亮数据，输出</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hit<span class="token punctuation">.</span><span class="token function">getHighlightFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-16-聚合查询" tabindex="-1"><a class="header-anchor" href="#_5-16-聚合查询" aria-hidden="true">#</a> 5.16 聚合查询</h3>`,17),an=n("br",null,null,-1),tn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/6.5/search-aggregations-bucket-datehistogram-aggregation.html",target:"_blank",rel:"noopener noreferrer"},en=a(`<h4 id="_5-16-1-去重计数查询" tabindex="-1"><a class="header-anchor" href="#_5-16-1-去重计数查询" aria-hidden="true">#</a> 5.16.1 去重计数查询</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /sms-logs-index/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;distant&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> # 自定义名称
      <span class="token property">&quot;cardinality&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;province&quot;</span>     # 按照 field 进行去重
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">aggregation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
<span class="token comment">//1. SearchRequest</span>
<span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token string">&quot;sms-logs-index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//2.构造查询条件</span>
builder<span class="token punctuation">.</span><span class="token function">aggregation</span><span class="token punctuation">(</span><span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">cardinality</span><span class="token punctuation">(</span><span class="token string">&quot;agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;province&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//3. 执行查询</span>
<span class="token class-name">SearchResponse</span> resp <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Cardinality</span> province <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> value <span class="token operator">=</span> province<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-16-2-范围统计" tabindex="-1"><a class="header-anchor" href="#_5-16-2-范围统计" aria-hidden="true">#</a> 5.16.2 范围统计</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /sms-logs-index/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> # 指定name
      <span class="token property">&quot;range&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> 
        <span class="token property">&quot;field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;fee&quot;</span><span class="token punctuation">,</span> # 字段
        <span class="token property">&quot;ranges&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token property">&quot;to&quot;</span><span class="token operator">:</span> <span class="token number">5</span>        <span class="token comment">//小于</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token property">&quot;from&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token comment">// 大于</span>
            <span class="token property">&quot;to&quot;</span><span class="token operator">:</span> <span class="token number">10</span>      <span class="token comment">//小于</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token property">&quot;from&quot;</span><span class="token operator">:</span> <span class="token number">10</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回结果：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;aggregations&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;test&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;buckets&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;key&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;*-5.0&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;to&quot;</span> <span class="token operator">:</span> <span class="token number">5.0</span><span class="token punctuation">,</span>
          <span class="token property">&quot;doc_count&quot;</span> <span class="token operator">:</span> <span class="token number">4</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;key&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;5.0-10.0&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;from&quot;</span> <span class="token operator">:</span> <span class="token number">5.0</span><span class="token punctuation">,</span>
          <span class="token property">&quot;to&quot;</span> <span class="token operator">:</span> <span class="token number">10.0</span><span class="token punctuation">,</span>
          <span class="token property">&quot;doc_count&quot;</span> <span class="token operator">:</span> <span class="token number">8</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;key&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;10.0-*&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;from&quot;</span> <span class="token operator">:</span> <span class="token number">10.0</span><span class="token punctuation">,</span>
          <span class="token property">&quot;doc_count&quot;</span> <span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">aggregationTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//1. SearchRequest</span>
        <span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token string">&quot;sms-logs-index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.构造查询条件                                       相当于名称</span>
        builder<span class="token punctuation">.</span><span class="token function">aggregation</span><span class="token punctuation">(</span><span class="token class-name">AggregationBuilders</span>
                <span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;fee&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">addUnboundedTo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">addRange</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">addUnboundedFrom</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3. 执行查询</span>
        <span class="token class-name">SearchResponse</span> resp <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//                                         根据名称获取</span>
        <span class="token class-name">Range</span> test <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取存储桶</span>
        test<span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>bucket <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bucket<span class="token punctuation">.</span><span class="token function">getKeyAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bucket<span class="token punctuation">.</span><span class="token function">getFromAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bucket<span class="token punctuation">.</span><span class="token function">getToAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bucket<span class="token punctuation">.</span><span class="token function">getDocCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>日期范围：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code># 时间方式范围统计 date_range format指定日期格式
POST /sms-logs-index/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;agg&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;date_range&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> 
        <span class="token property">&quot;field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;createDate&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot; &quot;</span><span class="token operator">:</span> <span class="token string">&quot;yyyy&quot;</span><span class="token punctuation">,</span> 
        <span class="token property">&quot;ranges&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token property">&quot;to&quot;</span><span class="token operator">:</span> <span class="token number">2000</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token property">&quot;from&quot;</span><span class="token operator">:</span> <span class="token number">2000</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ip范围：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code># ip方式 范围统计 ip_range
POST /sms-logs-index/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;agg&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;ip_range&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ipAddr&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;ranges&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token property">&quot;to&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token property">&quot;from&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10.157.2&quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-16-3-统计聚合查询" tabindex="-1"><a class="header-anchor" href="#_5-16-3-统计聚合查询" aria-hidden="true">#</a> 5.16.3 统计聚合查询</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code># 统计聚合查询 extended_stats
POST /sms-logs-index/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;agg&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;extended_stats&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;fee&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 
  <span class="token property">&quot;aggregations&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;agg&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;count&quot;</span> <span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
      <span class="token property">&quot;min&quot;</span> <span class="token operator">:</span> <span class="token number">3.0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;max&quot;</span> <span class="token operator">:</span> <span class="token number">8.0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;avg&quot;</span> <span class="token operator">:</span> <span class="token number">5.333333333333333</span><span class="token punctuation">,</span>
      <span class="token property">&quot;sum&quot;</span> <span class="token operator">:</span> <span class="token number">64.0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;sum_of_squares&quot;</span> <span class="token operator">:</span> <span class="token number">376.0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;variance&quot;</span> <span class="token operator">:</span> <span class="token number">2.8888888888888906</span><span class="token punctuation">,</span>
      <span class="token property">&quot;std_deviation&quot;</span> <span class="token operator">:</span> <span class="token number">1.6996731711975954</span><span class="token punctuation">,</span>
      <span class="token property">&quot;std_deviation_bounds&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;upper&quot;</span> <span class="token operator">:</span> <span class="token number">8.732679675728523</span><span class="token punctuation">,</span>
        <span class="token property">&quot;lower&quot;</span> <span class="token operator">:</span> <span class="token number">1.9339869909381422</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">extendedStats</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//1. SearchRequest</span>
        <span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token string">&quot;sms-logs-index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.构造查询条件                                       相当于名称</span>
        builder<span class="token punctuation">.</span><span class="token function">aggregation</span><span class="token punctuation">(</span><span class="token class-name">AggregationBuilders</span>
                <span class="token punctuation">.</span><span class="token function">extendedStats</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;fee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3. 执行查询</span>
        <span class="token class-name">SearchResponse</span> resp <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ExtendedStats</span> stats <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> max <span class="token operator">=</span> stats<span class="token punctuation">.</span><span class="token function">getMax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> min <span class="token operator">=</span> stats<span class="token punctuation">.</span><span class="token function">getMin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;最大值为：&quot;</span> <span class="token operator">+</span> max <span class="token operator">+</span> <span class="token string">&quot;，最小值为：&quot;</span> <span class="token operator">+</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-17-地图经纬度搜索" tabindex="-1"><a class="header-anchor" href="#_5-17-地图经纬度搜索" aria-hidden="true">#</a> 5.17 地图经纬度搜索</h3>`,16),pn=n("br",null,null,-1),on={href:"http://api.map.baidu.com/lbsapi/getpoint/index.html",target:"_blank",rel:"noopener noreferrer"},cn=a(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code># 创建一个索引，指定一个name，locaiton

# 创建一个map索引包含经纬度数据
<span class="token constant">PUT</span> <span class="token operator">/</span>map
<span class="token punctuation">{</span>
  <span class="token string">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;number_of_shards&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token string">&quot;number_of_replicas&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token string">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string">&quot;location&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token string">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;geo_point&quot;</span> <span class="token comment">//类型为经纬度</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token constant">PUT</span> map<span class="token operator">/</span>_doc<span class="token operator">/</span><span class="token number">1</span>
<span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;月季公园&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;location&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;lon&quot;</span><span class="token operator">:</span> <span class="token number">113.6368</span><span class="token punctuation">,</span>
    <span class="token string">&quot;lat&quot;</span><span class="token operator">:</span> <span class="token number">34.773985</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token constant">PUT</span> map<span class="token operator">/</span>_doc<span class="token operator">/</span><span class="token number">2</span>
<span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;郑州人民公园&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;location&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;lon&quot;</span><span class="token operator">:</span> <span class="token number">113.669581</span><span class="token punctuation">,</span>
    <span class="token string">&quot;lat&quot;</span><span class="token operator">:</span> <span class="token number">34.768197</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token constant">PUT</span> map<span class="token operator">/</span>_doc<span class="token operator">/</span><span class="token number">3</span>
<span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;火车站&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;location&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;lon&quot;</span><span class="token operator">:</span> <span class="token number">113.665988</span><span class="token punctuation">,</span>
    <span class="token string">&quot;lat&quot;</span><span class="token operator">:</span> <span class="token number">34.752776</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

# 查看所有数据
<span class="token constant">GET</span> map<span class="token operator">/</span>_search
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ES的地图检索方式</strong></p><table><thead><tr><th>语法</th><th>说明</th></tr></thead><tbody><tr><td>geo_distance</td><td>直线距离检索方式</td></tr><tr><td>geo_bounding_box</td><td>以两个点确定一个矩形，获取在矩形内的全部数据</td></tr><tr><td>geo_polygon</td><td>以多个点，确定一个多边形，获取多边形内的全部数据</td></tr></tbody></table><h4 id="_5-17-1-geo-distance-直线距离检索方式" tabindex="-1"><a class="header-anchor" href="#_5-17-1-geo-distance-直线距离检索方式" aria-hidden="true">#</a> 5.17.1 geo_distance 直线距离检索方式</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">POST</span> map<span class="token operator">/</span>_search
<span class="token punctuation">{</span>
  <span class="token string">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;geo_distance&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;location&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>   
        <span class="token string">&quot;lon&quot;</span><span class="token operator">:</span> <span class="token number">113.672455</span><span class="token punctuation">,</span> # 经度
        <span class="token string">&quot;lat&quot;</span><span class="token operator">:</span> <span class="token number">34.758619</span> #  纬度
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string">&quot;distance&quot;</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span> # 距离 单位米
      <span class="token string">&quot;distance_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;arc&quot;</span> # 距离类型 弧行 
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">geoDistanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//1. SearchRequest</span>
        <span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token string">&quot;map&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//地理边界框查询生成器</span>
        <span class="token class-name">GeoDistanceQueryBuilder</span> location <span class="token operator">=</span> <span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">geoDistanceQuery</span><span class="token punctuation">(</span><span class="token string">&quot;location&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        location<span class="token punctuation">.</span><span class="token function">point</span><span class="token punctuation">(</span><span class="token number">34.758619</span><span class="token punctuation">,</span><span class="token number">113.672455</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token class-name">DistanceUnit</span><span class="token punctuation">.</span><span class="token constant">METERS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.构造查询条件                                       相当于名称</span>
        builder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3. 执行查询</span>
        <span class="token class-name">SearchResponse</span> resp <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> resp<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hit<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-17-2-geo-bounding-box-以两个点确定一个矩形-获取在矩形内的全部数据" tabindex="-1"><a class="header-anchor" href="#_5-17-2-geo-bounding-box-以两个点确定一个矩形-获取在矩形内的全部数据" aria-hidden="true">#</a> 5.17.2 geo_bounding_box 以两个点确定一个矩形，获取在矩形内的全部数据</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code># 两个点<span class="token punctuation">[</span>左上角<span class="token operator">/</span>右下角<span class="token punctuation">]</span>确定一个矩形，查找内部的数据
<span class="token constant">POST</span> map<span class="token operator">/</span>_search
<span class="token punctuation">{</span>
  <span class="token string">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;geo_bounding_box&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;location&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;top_left&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string">&quot;lon&quot;</span><span class="token operator">:</span> <span class="token number">113.616689</span><span class="token punctuation">,</span>
          <span class="token string">&quot;lat&quot;</span><span class="token operator">:</span> <span class="token number">34.768405</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&quot;bottom_right&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string">&quot;lon&quot;</span><span class="token operator">:</span> <span class="token number">113.695452</span><span class="token punctuation">,</span>
          <span class="token string">&quot;lat&quot;</span><span class="token operator">:</span> <span class="token number">34.768167</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">geoBoundingBoxQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
            <span class="token comment">//1. SearchRequest</span>
            <span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token string">&quot;map&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//地理边界框查询生成器</span>
            <span class="token class-name">GeoBoundingBoxQueryBuilder</span> localhost <span class="token operator">=</span> <span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">geoBoundingBoxQuery</span><span class="token punctuation">(</span><span class="token string">&quot;location&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            localhost<span class="token punctuation">.</span><span class="token function">setCorners</span><span class="token punctuation">(</span><span class="token number">34.778486</span><span class="token punctuation">,</span><span class="token number">113.616976</span><span class="token punctuation">,</span><span class="token number">34.747645</span><span class="token punctuation">,</span><span class="token number">113.675186</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//2.构造查询条件                                       相当于名称</span>
            builder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>localhost<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//3. 执行查询</span>
            <span class="token class-name">SearchResponse</span> resp <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> resp<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hit<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-17-3-geo-polygon-以多个点-确定一个多边形-获取多边形内的全部数据" tabindex="-1"><a class="header-anchor" href="#_5-17-3-geo-polygon-以多个点-确定一个多边形-获取多边形内的全部数据" aria-hidden="true">#</a> 5.17.3 geo_polygon 以多个点，确定一个多边形，获取多边形内的全部数据</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token constant">POST</span> map<span class="token operator">/</span>_search
<span class="token punctuation">{</span>
  <span class="token string">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;geo_polygon&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;location&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;points&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token string">&quot;lon&quot;</span><span class="token operator">:</span> <span class="token number">113.624306</span><span class="token punctuation">,</span>
            <span class="token string">&quot;lat&quot;</span><span class="token operator">:</span> <span class="token number">34.778486</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token string">&quot;lon&quot;</span><span class="token operator">:</span> <span class="token number">113.616976</span><span class="token punctuation">,</span>
            <span class="token string">&quot;lat&quot;</span><span class="token operator">:</span> <span class="token number">34.768286</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token string">&quot;lon&quot;</span><span class="token operator">:</span> <span class="token number">113.675186</span><span class="token punctuation">,</span>
            <span class="token string">&quot;lat&quot;</span><span class="token operator">:</span> <span class="token number">34.747645</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token string">&quot;lon&quot;</span><span class="token operator">:</span> <span class="token number">113.687834</span><span class="token punctuation">,</span>
            <span class="token string">&quot;lat&quot;</span><span class="token operator">:</span> <span class="token number">34.78406</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function ln(un,rn){const t=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("暂未启动完毕"),r,k,d,s(" es: "),n("a",v,[s("http://120.26.105.43:9200/"),e(t)]),m,s(" 出现json数据则启动成功")]),b,n("p",null,[s("kibana: "),n("a",g,[s("http://120.26.105.43:5601/"),e(t)]),h,s(" 图形化界面操作es"),q,y]),f,n("p",null,[s("字符串类型：text：一把被用于全文检索。 将当前Field进行分词。"),_,s(" keyword：当前Field不会被分词。"),S,s(" 数值类型："),w,s(" long：取值范围为-9223372036854774808~922337203685477480(-2的63次方到2的63次方-1)，占用8个字节"),x,s(" integer：取值范围为-2147483648~2147483647(-2的31次方到2的31次方-1)，占用4个字节"),B,s(" short：取值范围为-32768~32767(-2的15次方到2的15次方-1)，占用2个字节"),R,s(" byte：取值范围为-128~127(-2的7次方到2的7次方-1)，占用1个字节"),j,s(" double：1.797693e+308~ 4.9000000e-324 (e+308表示是乘以10的308次方，e-324表示乘以10的负324次方)占用8个字节"),E,s(" float：3.402823e+38 ~ 1.401298e-45(e+38表示是乘以10的38次方，e-45表示乘以10的负45次方)，占用4个字节"),T,s(" half_float：精度比float小一半。"),Q,s(" scaled_float：根据一个long和scaled来表达一个浮点型，long-345，scaled-100 -> 3.45"),C,s(" 布尔类型："),H,s(" boolean类型，表达true和false"),L,s(" 二进制类型："),z,s(" binary类型暂时支持Base64 encode string"),A,s(" 时间类型："),I,s(" date类型，针对时间类型指定具体的格式"),O,s(" format 指定时间格式 yyyy-MM-dd"),P,s(" 范围类型："),D,s(" long_range：赋值时，无需指定具体的内容，只需要存储一个范围即可，指定gt，lt，gte，lte"),U,s(" integer_range：同上"),M,s(" double_range：同上"),F,s(" float_range：同上"),V,s(" date_range：同上"),N,s(" ip_range：同上"),G,s(" 经纬度类型："),K,s(" geo_point：用来存储经纬度的：经度/纬度"),$,s(" ip类型："),J,s(" ip：可以存储IPV4或者IPV6"),X,n("a",Y,[s("其他的数据类型参考官网(opens new window) "),e(t)])]),W,n("p",null,[s("正则查询，通过你编写的正则表达式去匹配内容。使用较多 模糊查询性能较低"),Z,n("a",nn,[s("https://www.sojson.com/regex/generate"),e(t)])]),sn,n("p",null,[s("ES的聚合查询和MySQL的聚合查询类似，ES的聚合查询相比MySQL要强大的多，ES提供的统计数据的方式多种多样"),an,n("a",tn,[s("https://www.elastic.co/guide/en/elasticsearch/reference/6.5/search-aggregations-bucket-datehistogram-aggregation.html"),e(t)])]),en,n("p",null,[s("ES中提供了一个数据类型 geo_point，这个类型就是用来存储经纬度的。"),pn,s(" 创建一个带geo_point类型的索引，并添加测试数据 "),n("a",on,[s("坐标拾取"),e(t)])]),cn])}const dn=p(i,[["render",ln],["__file","ElasticSearch.html.vue"]]);export{dn as default};
